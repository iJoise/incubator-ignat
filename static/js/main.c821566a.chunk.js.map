{"version":3,"sources":["p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h5/pages/Error404/Error404.module.scss","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h4/HW4.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h5/pages/Error404/Error404.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior/PreJunior.tsx","p2-homeworks/h5/pages/Junior/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx","p2-homeworks/h5/Header.module.scss"],"names":["module","exports","Error404","className","s","body","rocket","hgroup","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","label","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","groupInput","e","currentTarget","value","key","bar","SuperButton","red","children","finalClassName","supperButton","default","SuperCheckbox","onChangeChecked","checkbox","change","checked","HW4","useState","text","setText","showAlert","alert","setChecked","column","blue","onClick","disabled","PreJunior","Junior","JuniorPlus","PATH","Routes","path","exact","render","to","Header","header","logo","navigation","arrow","nav","list","activeClassName","activeLink","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.c821566a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"groupInput\":\"SuperInputText_groupInput__i3cfN\",\"superInput\":\"SuperInputText_superInput__3XH9u\",\"label\":\"SuperInputText_label__3f5ky\",\"bar\":\"SuperInputText_bar__2KFL0\",\"errorInput\":\"SuperInputText_errorInput__3ei0N\",\"error\":\"SuperInputText_error__2J82S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"supperButton\":\"SuperButton_supperButton__jSPYs\",\"default\":\"SuperButton_default__-BXUG\",\"red\":\"SuperButton_red__1kaz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Error404_body__2bz1W\",\"rocket\":\"Error404_rocket__3b3xA\",\"hgroup\":\"Error404_hgroup__3MMfc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__kF06l\",\"checkbox\":\"SuperCheckbox_checkbox__Imn1x\",\"spanClassName\":\"SuperCheckbox_spanClassName__1K9ch\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2RJeg\",\"column\":\"HW4_column__2ZS4I\",\"testSpanError\":\"HW4_testSpanError___Mj8X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1Sc4o\"};","import React from 'react'\nimport s from \"./Error404.module.scss\";\n\n\n\nfunction Error404() {\n    return (\n        <div className={s.body}>\n           <div className={s.rocket}/>\n           <div className={s.hgroup}>\n              <h1>Page Not Found</h1>\n              <h2>We couldn't find what you were looking for.</h2>\n           </div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n   onChangeText?: (value: string) => void\n   onEnter?: () => void\n   error?: string\n   spanClassName?: string\n   label?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n   {\n      type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n      onChange,\n      onChangeText,\n      onKeyPress,\n      onEnter,\n      error,\n      className,\n      spanClassName,\n      label,\n      ...restProps// все остальные пропсы попадут в объект restProps\n   }\n) => {\n   const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n      onChange // если есть пропс onChange\n      && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n      onChangeText && onChangeText(e.currentTarget.value)\n   }\n   const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n      onKeyPress && onKeyPress(e);\n\n      onEnter // если есть пропс onEnter\n      && e.key === 'Enter' // и если нажата кнопка Enter\n      && onEnter() // то вызвать его\n   }\n\n\n   const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n   const finalInputClassName = error ? `${s.errorInput} ${className}` : `${s.superInput} ${className} ` // need to fix with (?:) and s.superInput\n\n   return (\n      <div className={s.groupInput}>\n         <input\n            type={'text'}\n            onChange={onChangeCallback}\n            onKeyPress={onKeyPressCallback}\n            className={finalInputClassName}\n\n            {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n         />\n         <span className={s.bar}/>\n         <div className={s.label}>{label}</div>\n         {error && <span className={finalSpanClassName}>{error}</span>}\n      </div>\n   )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n   red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n   {\n      red,\n      className,\n      children,\n      ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n   }\n) => {\n   const finalClassName = ` ${s.supperButton} ${red ? s.default + \" \" + s.red : s.default}`\n\n   return (\n      <button\n         className={finalClassName}\n         {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n\n      >\n         <span>{children}</span>\n      </button>\n   )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n       const change = e.currentTarget.checked;\n         onChange && onChange(e);\n       onChangeChecked && onChangeChecked(change)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label className={s.label}>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n   const [text, setText] = useState<string>('')\n   const error = text ? '' : 'error'\n\n   const showAlert = () => {\n      if (error) {\n         alert('введите текст...')\n      } else {\n         alert(text) // если нет ошибки показать текст\n      }\n   }\n\n   const [checked, setChecked] = useState<boolean>(false)\n   const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n   return (\n      <div>\n         <hr/>\n         homeworks 4\n\n         <div className={s.column}>\n            <SuperInputText\n               value={text}\n               onChangeText={setText}\n               onEnter={showAlert}\n               error={error}\n               label={'Name'}\n               // spanClassName={s.testSpanError}\n            />\n\n            <SuperInputText\n               value={text}\n               onChangeText={setText}\n               label={'Password'}\n               className={s.blue}// проверьте, рабоет ли смешивание классов\n            />\n\n            {/*----------------------------------------------------*/}\n\n            <SuperButton\n            >\n               default\n            </SuperButton>\n\n            <SuperButton\n               red // пропсу с булевым значением не обязательно указывать true\n               onClick={showAlert}\n            >\n               delete {/*// название кнопки попадёт в children*/}\n            </SuperButton>\n\n            <SuperButton\n               disabled\n            >\n               disabled\n            </SuperButton>\n\n            {/*----------------------------------------------------*/}\n\n            <SuperCheckbox\n               checked={checked}\n               onChangeChecked={setChecked}\n            >\n               some text {/*// этот текст попадёт в children*/}\n            </SuperCheckbox>\n\n            {/*// onChange тоже должен работать*/}\n            <SuperCheckbox checked={checked} onChange={testOnChange}/>\n         </div>\n\n         <hr/>\n         {/*для личного творчества, могу проверить*/}\n         {/*<AlternativeSuperInputText/>*/}\n         {/*<AlternativeSuperButton/>*/}\n         {/*<AlternativeSuperCheckbox/>*/}\n         <hr/>\n      </div>\n   )\n}\n\nexport default HW4\n","import React from 'react'\n// import HW1 from '../../h1/HW1'\n// import HW2 from '../../h2/HW2'\n// import HW3 from '../../h3/HW3'\nimport HW4 from '../../../h4/HW4'\nimport s from \"./PreJunior.module.scss\";\n\n\n\nfunction PreJunior() {\n    return (\n        <div>\n            {/*<HW1/>*/}\n            {/*<HW2/>*/}\n            {/*<HW3/>*/}\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from \"react\";\nimport s from \"./Junior.module.scss\";\n\ntype JuniorPropsType = {\n   \n}\n\n\nexport const Junior: React.FC<JuniorPropsType> = ({}) => {\n\n   return (\n      <div>\n\n      </div>\n   )\n}\n","import React from \"react\";\nimport s from \"./JuniorPlus.module.scss\";\n\ntype JuniorPlusPropsType = {\n\n}\n\n\nexport const JuniorPlus: React.FC<JuniorPlusPropsType> = ({}) => {\n\n   return (\n      <div>\n\n      </div>\n   )\n}\n","import React from 'react'\nimport {Redirect, Route, Switch} from 'react-router-dom'\nimport Error404 from './pages/Error404/Error404'\nimport PreJunior from './pages/PreJunior/PreJunior'\nimport {Junior} from \"./pages/Junior/Junior\";\nimport {JuniorPlus} from \"./pages/JuniorPlus/JuniorPlus\";\n\nexport const PATH = {\n   PRE_JUNIOR: '/pre-junior',\n   JUNIOR: '/junior',\n   JUNIOR_PLUS: '/junior_plus'\n}\n\nfunction Routes() {\n   return (\n      <>\n         {/*Switch выбирает первый подходящий роут*/}\n         <Switch>\n\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n            <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n            <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\n            <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\n            {/*// add routes*/}\n\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n            <Route render={() => <Error404/>}/>\n\n         </Switch>\n      </>\n   )\n}\n\nexport default Routes\n","import React from 'react'\nimport {NavLink} from 'react-router-dom';\nimport s from \"./Header.module.scss\";\nimport {PATH} from \"./Routes\";\n\n\nfunction Header() {\n   return (\n      <div className={s.header}>\n         <div className={s.logo}>IT-INCUBATOR</div>\n         <div className={s.navigation}>\n            <div className={s.arrow}>« <span>Menu</span></div>\n            <nav className={s.nav}>\n               <ul className={s.list}>\n                  <li>\n                     <NavLink to={PATH.PRE_JUNIOR} activeClassName={s.activeLink}>\n                        PreJunior\n                     </NavLink>\n                  </li>\n                  <li>\n                     <NavLink to={PATH.JUNIOR} activeClassName={s.activeLink}>\n                        Junior\n                     </NavLink>\n                  </li>\n                  <li>\n                     <NavLink to={PATH.JUNIOR_PLUS} activeClassName={s.activeLink}>\n                        JuniorPlus\n                     </NavLink>\n                  </li>\n               </ul>\n            </nav>\n         </div>\n      </div>\n   )\n}\n\nexport default Header\n","import React from 'react'\nimport Header from './Header'\nimport Routes from './Routes'\nimport {HashRouter} from \"react-router-dom\";\n\nfunction HW5() {\n   return (\n      <>\n         {/*в gh-pages лучше работает HashRouter*/}\n         <HashRouter>\n            <Header/>\n            <Routes/>\n         </HashRouter>\n      </>\n   )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <HW5/>\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2TTZF\",\"logo\":\"Header_logo__27wDg\",\"navigation\":\"Header_navigation__mqEx_\",\"arrow\":\"Header_arrow__3hjmT\",\"mymove\":\"Header_mymove__icZxM\",\"nav\":\"Header_nav__TGtIq\",\"myMoveNav\":\"Header_myMoveNav__1xbLZ\",\"myNotMove\":\"Header_myNotMove__1giBg\",\"myNotMoveNav\":\"Header_myNotMoveNav__wrXPp\",\"list\":\"Header_list__i6P3Y\",\"activeLink\":\"Header_activeLink__1XN2-\"};"],"sourceRoot":""}